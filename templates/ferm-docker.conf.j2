{% if provider is defined and provider == "ec2" %}
domain ip table filter {
  chain FORWARD {
    interface $DOCKER_DEV daddr 169.254.169.254 proto tcp DROP;
  }
}

{% if docker_ipv6_enabled %}
domain ip6 table filter {
  chain FORWARD {
    interface $DOCKER_DEV daddr fd00:ec2::254 proto tcp DROP;
  }
}
{% endif %}
{% endif %}

domain ip {
  table filter {
    chain (DOCKER DOCKER-ISOLATION-STAGE-1 DOCKER-ISOLATION-STAGE-2) @preserve;

    chain FORWARD {
      # -A FORWARD -j DOCKER-USER
      jump DOCKER-USER;
      # -A FORWARD -j DOCKER-ISOLATION-STAGE-1
      jump DOCKER-ISOLATION-STAGE-1;

      # -A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
      outerface $DOCKER_DEV mod state state (ESTABLISHED RELATED) ACCEPT;
      # -A FORWARD -o docker0 -j DOCKER
      outerface $DOCKER_DEV jump DOCKER;
      # -A FORWARD -i docker0 ! -o docker0 -j ACCEPT
      interface $DOCKER_DEV outerface ! $DOCKER_DEV ACCEPT;
      # -A FORWARD -i docker0 -o docker0 -j ACCEPT
      interface $DOCKER_DEV outerface $DOCKER_DEV {{ docker_icc_enabled | ternary('ACCEPT', 'DROP') }};
    }

    chain DOCKER-USER {
      # -A DOCKER-USER -j RETURN
      RETURN;
    }

    # chain DOCKER-ISOLATION-STAGE-1 {
    #   # -A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j
    #   interface $DOCKER_DEV outerface ! $DOCKER_DEV jump DOCKER-ISOLATION-STAGE-2;
    #   # -A DOCKER-ISOLATION-STAGE-1 -j RETURN
    #   RETURN;
    # }
    #
    # chain DOCKER-ISOLATION-STAGE-2 {
    #   # -A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
    #   outerface $DOCKER_DEV DROP;
    #   # -A DOCKER-ISOLATION-STAGE-2 -j RETURN
    #   RETURN;
    # }
  }

  table nat {
    chain DOCKER @preserve;

    chain PREROUTING {
      # -A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
      mod addrtype dst-type LOCAL jump DOCKER;
    }

    chain POSTROUTING {
      # -A POSTROUTING -o docker0 -m addrtype --src-type LOCAL -j MASQUERADE
      outerface $DOCKER_DEV mod addrtype dst-type LOCAL MASQUERADE;

      # -A POSTROUTING -s 192.168.0.0/16 ! -o docker0 -j MASQUERADE
      saddr $DOCKER_V4_CIDR outerface ! $DOCKER_DEV MASQUERADE;
    }

    chain OUTPUT {
      # -A OUTPUT -m addrtype --dst-type LOCAL -j DOCKER
      mod addrtype dst-type LOCAL jump DOCKER;
    }
  }
}

{% if docker_ipv6_enabled %}
domain ip6 table filter {
  chain FORWARD {
    # -A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    outerface $DOCKER_DEV mod state state (ESTABLISHED RELATED) ACCEPT;
    # -A FORWARD -i docker0 ! -o docker0 -j ACCEPT
    interface $DOCKER_DEV outerface ! $DOCKER_DEV ACCEPT;
    # -A FORWARD -i docker0 -o docker0 -j ACCEPT
    interface $DOCKER_DEV outerface $DOCKER_DEV {{ docker_icc_enabled | ternary('ACCEPT', 'DROP') }};
  }
}

domain ip6 table nat {
  chain POSTROUTING {
    # -A POSTROUTING -o docker0 -m addrtype --src-type LOCAL -j MASQUERADE
    outerface $DOCKER_DEV mod addrtype dst-type LOCAL MASQUERADE;

    # -A POSTROUTING -s 192.168.0.0/16 ! -o docker0 -j MASQUERADE
    saddr $DOCKER_V6_CIDR outerface ! $DOCKER_DEV MASQUERADE;
  }
}
{% endif %}
