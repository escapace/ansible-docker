---

- name: install docker dependencies
  package:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - device-mapper-persistent-data
      - lvm2
      - cronie

- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-common
      - docker-engine
    state: absent

- name: Add Docker GPG key.
  rpm_key:
    key: https://download.docker.com/linux/centos/gpg
    state: present

- name: Add Docker repository.
  get_url:
    url: "{{ docker_yum_repo_url }}"
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    owner: root
    group: root
    mode: 0644

- name: Configure Docker Edge repo.
  ini_file:
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    section: 'docker-{{ docker_edition }}-edge'
    option: enabled
    value: '{{ docker_yum_repo_enable_edge }}'
    mode: 0644

- name: Configure Docker Test repo.
  ini_file:
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    section: 'docker-{{ docker_edition }}-test'
    option: enabled
    value: '{{ docker_yum_repo_enable_test }}'
    mode: 0644

- name: Install containerd separately (CentOS 8).
  package:
    name: https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
    state: present

- name: copy docker logrotate configurations
  copy:
    src: "docker.logrotate"
    dest: "/etc/logrotate.d/docker"
    mode: 0644
    owner: root
    group: root

- name: create docker log archive
  file:
    path: "/var/log/docker/archive"
    mode: 0755
    state: directory

- name: create directory for systemd drop-ins
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755

- name: systemd drop-in for options
  template:
    src:  "{{ item }}.j2"
    dest: "/etc/systemd/system/docker.service.d/{{ item }}"
    mode: 0644
  with_items:
    - 10-options.conf
    - 12-network-options.conf
  notify:
    - docker restart

- name: systemd drop-in for ExecStart
  copy:
    src: ExecStart.conf
    dest: /etc/systemd/system/docker.service.d/20-ExecStart.conf
    mode: 0644
  notify:
    - docker restart

- name: install docker
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - "{{ docker_package }}"
      - "container-selinux"

- name: ensure docker config dir exists
  file:
    path: /root/.docker
    state: directory
    mode: 0755

- name: setup private docker registry credentials
  when: docker_registries is defined and (docker_registries | length > 0)
  template:
    src: config.json.j2
    dest: /root/.docker/config.json
    owner: root
    group: root
    mode: 0600
  register: docker_registry_credentials

- name: systemd drop-in for storage options
  register: docker_storage_options
  template:
    src:  "{{ item }}.j2"
    dest: "/etc/systemd/system/docker.service.d/{{ item }}"
    mode: 0644
  with_items:
    - 14-storage-options.conf
  notify:
    - docker restart

- include_tasks: lvm.yml
  when: (lvm_physical_device is defined) and (lvm_physical_device | length > 0)

- name: create the docker ferm configuration
  template: src=templates/ferm.conf.j2 dest=/etc/ferm/ferm.d/2000-docker.conf owner=root group=root mode=0644
  notify:
    - ferm restart
    - docker restart

- name: create the docker ferm variables
  template: src=templates/ferm-vars.conf.j2 dest=/etc/ferm/vars.d/2000-docker.conf owner=root group=root mode=0644
  notify:
    - ferm restart
    - docker restart

- name: enable docker
  service:
    name: docker
    enabled: yes
  notify:
    - ferm restart
    - docker restart

- name: create docker-system-prune cron job
  cron:
    name: "docker-system-prune"
    minute: "0"
    hour: "*/2"
    job: "docker system prune -af > /dev/null 2>&1"
    user: "root"
    cron_file: "docker-system-prune"

- name: docker kresd configuration
  template:
    src: "{{ item }}"
    dest: /etc/knot-resolver/kresd.conf.d/{{ item | basename | regex_replace('.j2$', '') }}
    owner: root
    group: knot-resolver
    mode: 0640
  loop:
    - "910-view-docker.conf.j2"
  notify:
    - kresd restart
