---

- name: ensure old versions of docker are not installed.
  ansible.builtin.package:
    name:
      - docker
      - docker-common
      - docker-engine
    state: absent

- name: docker repo
  ansible.builtin.template:
    src: docker-ce.repo.j2
    dest: "/etc/yum.repos.d/docker-ce.repo"
    owner: root
    group: root
    mode: 0644

- name: create directory for systemd drop-ins
  ansible.builtin.file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755
  notify:
    - docker daemon-reload

- name: systemd drop-in for options
  ansible.builtin.template:
    src:  "{{ item.src }}"
    dest: "/etc/systemd/system/docker.service.d/{{ item.dest }}"
    mode: 0644
  loop:
    - { src: 'docker-service-general-options.conf.j2', dest: '010-general-options.conf' }
    - { src: 'docker-service-storage-options.conf.j2', dest: '020-storage-options.conf' }
    - { src: 'docker-service-network-options.conf.j2', dest: '030-network-options.conf' }
    - { src: 'docker-service-exec-start.conf.j2', dest: '090-exec-start.conf' }
  notify:
    - docker daemon-reload

- name: install docker
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - 'docker-{{ docker_edition }}'
      - 'docker-{{ docker_edition }}-cli'
      - containerd.io

- name: fix docker.socket service
  ansible.builtin.lineinfile:
    path: "/usr/lib/systemd/system/docker.socket"
    regexp: '^ListenStream='
    line: "ListenStream=/run/docker.sock"
    insertafter: '^[Socket]'
    owner: root
    group: root
    mode: '0644'

- name: alow containers to manage cgroup
  ansible.posix.seboolean:
    name: container_manage_cgroup
    state: true
    persistent: true
  when: docker_selinux | bool and docker_selinux_container_cgroup | bool and not docker_role_debug | bool

- name: ensure docker config dir exists
  ansible.builtin.file:
    path: /root/.docker
    state: directory
    mode: 0755

- include_tasks: storage-setup.yml
  when: (storage_setup_physical_device is defined) and (storage_setup_physical_device | length > 0) and (docker_storage_driver == "overlay2")

- name: docker-system-prune
  ansible.builtin.template:
    src:  "{{ item.src }}"
    dest: "/usr/lib/systemd/system/{{ item.dest }}"
    mode: 0644
  loop:
    - { src: 'docker-system-prune.service.j2', dest: 'docker-system-prune.service' }
    - { src: 'docker-system-prune.timer.j2', dest: 'docker-system-prune.timer' }
  notify:
    - docker daemon-reload

- name: enable docker
  ansible.builtin.service:
    name: docker
    enabled: true
  when: not docker_role_debug|bool

- name: enable docker-system-prune.timer
  ansible.builtin.service:
    name: docker-system-prune.timer
    enabled: true
  when: not docker_role_debug|bool
